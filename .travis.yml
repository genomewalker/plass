language: minimal

os: linux
dist: xenial
addons:
  apt:
    packages: &default_packages
      - cmake
      - make
      - zlib1g-dev
      - libbz2-dev
      - vim-common
      - shellcheck

matrix:
  include:
  - addons:
      apt:
        packages:
          - *default_packages
          - clang-5.0
          - libc++-dev
          - libomp-dev
    env: CC=clang-5.0 CXX=clang++-5.0
  - addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
          - *default_packages
          - clang-10
          - libc++-10-dev
          - libc++abi-10-dev
          - libomp-10-dev
    env: CC=clang-10 CXX=clang++-10
  - addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - *default_packages
          - gcc-4.9
          - g++-4.9
    env: CC=gcc-4.9 CXX=g++-4.9
  - addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - *default_packages
          - gcc-9
          - g++-9
    env: CC=gcc-9 CXX=g++-9
  - addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - *default_packages
          - gcc-9
          - g++-9
          - mpi-default-dev
          - mpi-default-bin
    env: MPI=1 CC=gcc-9 CXX=g++-9
  - os: osx
    osx_image: xcode10.1
    addons:
      homebrew:
        packages:
          - cmake
          - zlib
          - bzip2
          - libomp
        update: true

before_install:
  - export CC
  - export CXX

script:
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then \
      if [[ -n "$MPI" ]]; then MPI=1; else MPI=0; fi; \
      mkdir build; cd build; \
      cmake -DHAVE_MPI="$MPI" -DHAVE_SSE4_1=1 -DREQUIRE_OPENMP=0 ..;
      make -j $(nproc --all); \
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then \
      ./lib/mmseqs/util/build_osx.sh . build plass || exit 1; \
    else \
      exit 1; \
    fi

after_success:
  - |
    if [[ "$TRAVIS_PULL_REQUEST" == "false" ]] && [[ "$TRAVIS_OS_NAME" == "osx" ]]; then \
        mkdir -p plass/bin; \
        cp README.md LICENSE.md plass; \
        cp build/build_sse41/src/plass plass/bin; \
        tar czvf plass-osx-sse41.tar.gz plass; \
        cp build/build_avx2/src/plass plass/bin; \
        tar czvf plass-osx-avx2.tar.gz plass; \
        openssl aes-256-cbc -K $encrypted_70a1e64028ee_key -iv $encrypted_70a1e64028ee_iv -in ./util/.travis.enc -out $HOME/.ssh/id_rsa -d; \
        chmod 400 $HOME/.ssh/id_rsa; \
        ssh -o StrictHostKeyChecking=no codeship@uniclust.mmseqs.com "mkdir -p /home/mirdita/repositories/mmseqs-webserver/archive/${TRAVIS_COMMIT}"; \
        scp -o StrictHostKeyChecking=no plass-osx-sse41.tar.gz plass-osx-avx2.tar.gz codeship@uniclust.mmseqs.com:/home/mirdita/repositories/mmseqs-webserver/archive/${TRAVIS_COMMIT}; \
    fi
